package crowd.ui

import fr.utbm.info.ia51.framework.gui.AbstractFrameworkGUI
import fr.utbm.info.ia51.framework.math.Point2f
import fr.utbm.info.ia51.framework.math.Vector2f
import fr.utbm.info.ia51.framework.time.TimeManager
import fr.utbm.info.ia51.framework.util.Resources
import java.awt.Color
import java.awt.Graphics2D
import java.awt.GridLayout
import java.awt.Shape
import java.awt.geom.Line2D
import java.io.Serializable
import java.text.DecimalFormat
import javax.swing.Icon
import javax.swing.ImageIcon
import javax.swing.JCheckBox
import javax.swing.JComponent
import javax.swing.JPanel
import javax.swing.JSlider

public class Gui extends AbstractFrameworkGUI {

	static val DIRECTION_RADIUS = 30f  // ICON的大小

	static var VISITOR_ICON : Icon
	//static var CARROT_ICON : Icon
	static var ICON_WIDTH : int
	static var ICON_HEIGHT : int

	static val FAKE = {
		//var url = Resources.getResource(typeof(Gui), "visitor.png") // $NON-NLS-1$
		//assert url !== null
		//VISITOR_ICON = new ImageIcon(url)

		VISITOR_ICON = new ImageIcon("。/visitor.png")
		//		url = Resources::getResource(typeof(GUI), "carrot.png") // $NON-NLS-1$
//		assert url !== null
//		CARROT_ICON = new ImageIcon(url)
		ICON_WIDTH = VISITOR_ICON.iconWidth
		ICON_HEIGHT = VISITOR_ICON.iconHeight
		null
	}

	// create a BottomPanel for simulate control
	new(worldWidth : float,worldHeight: float,timeManager:TimeManager){
		super(
			"Crowd Simulation",
			worldWidth,
			worldHeight,
			Resources::getResource(typeof(Gui),"start.png"), //这个png显示在左上角
			timeManager
		)	
	}

	var showIcons : JCheckBox
	var showPositions : JCheckBox // 这两个是下方的额外选项

	override createBottomPanel(speedSlider : JSlider, closeButton : JComponent, messageBox : JComponent) : JComponent {
		var bottomPanel = new JPanel
		bottomPanel.layout = new GridLayout(5, 1)
		this.showIcons = new JCheckBox("Draw the icons of the visitors.")
		this.showIcons.addActionListener[repaint]
		this.showIcons.selected = true
		this.showPositions = new JCheckBox("Draw the positions.")
		this.showPositions.addActionListener[repaint]
		bottomPanel.add(speedSlider)
		bottomPanel.add(this.showIcons)
		bottomPanel.add(this.showPositions)
		bottomPanel.add(closeButton)
		bottomPanel.add(messageBox)
		return bottomPanel
	}
	
	protected def isMouseCursorHidden : boolean {
		true
	}

	//用来画人的图像和方向
	protected def paintIcon(g2d : Graphics2D, icon : Icon, position : Point2f, orientation : Vector2f) {
		if (orientation !== null) {
			g2d.draw(new Line2D.Float(position.x, position.y, position.x + orientation.x * DIRECTION_RADIUS * 1.5f,
				position.y + orientation.y * DIRECTION_RADIUS * 1.5f));
		}
		icon.paintIcon(this, g2d, position.x as int - ICON_WIDTH / 2, position.y as int - ICON_HEIGHT / 2);
	}

	override paintAgentBody(g2d : Graphics2D, positionOnScreen : Point2f, orientationOnScreen : Vector2f, shape : Shape,
		type : Serializable, name : String, positionInMAS : Point2f, frustum : Shape) {
		var bounds = shape.bounds
		g2d.color = Color::BLUE
		if (this.showIcons.selected) {
			paintIcon(g2d, VISITOR_ICON, positionOnScreen, orientationOnScreen)
			
		} else {
			orientationOnScreen.scale(DIRECTION_RADIUS)
			g2d.draw(
				new Line2D.Float(positionOnScreen.x, positionOnScreen.y, positionOnScreen.x + orientationOnScreen.x,
					positionOnScreen.y + orientationOnScreen.y))
			g2d.fill(shape)
		}
		if (this.showPositions.selected) {
			var oldFont = g2d.font
			var f = oldFont.deriveFont(6)
			g2d.color = g2d.background.darker
			g2d.font = f
			var fmt = new DecimalFormat("#.#")
			g2d.drawString(
					"(" + fmt.format(positionInMAS.x) + ";" + fmt.format(positionInMAS.y) + ")",
				bounds.maxX as float + 2, bounds.maxY as float + 2)
			g2d.font = oldFont
		}
	}

	override paintSituatedObject(g2d : Graphics2D, positionOnScreen : Point2f, orientationOnScreen : Vector2f,
		shape : Shape, type : Serializable, name : String, positionInMAS : Point2f) {
		var bounds = shape.bounds
		g2d.color = Color.GREEN

		var icon : Icon
		if ("TARGET" == type) {
			icon = VISITOR_ICON
		}

		if (this.showIcons.selected && icon !== null) {
			paintIcon(g2d, icon, positionOnScreen, orientationOnScreen)
		} else {
			g2d.fill(shape)
			if (orientationOnScreen !== null) {
				g2d.color = g2d.background
				var v = orientationOnScreen * Math.max(bounds.width, bounds.height) as float
				g2d.draw(new Line2D.Float(positionOnScreen.x, positionOnScreen.y, positionOnScreen.x + v.x,
					positionOnScreen.y + v.y))
			}
		}
		if (this.showPositions.selected) {
			var oldFont = g2d.font
			var f = oldFont.deriveFont(6)
			g2d.color = g2d.background.darker
			g2d.font = f
			var fmt = new DecimalFormat("#.#")
			g2d.drawString(
					"(" + fmt.format(positionInMAS.x) + ";" + fmt.format(positionInMAS.y) + ")",
					bounds.maxX as float + 2, bounds.maxY as float + 2)
			g2d.font = oldFont
		}
	}

}
