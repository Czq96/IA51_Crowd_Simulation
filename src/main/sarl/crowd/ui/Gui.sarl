package crowd.ui

import fr.utbm.info.ia51.framework.gui.AbstractFrameworkGUI
import fr.utbm.info.ia51.framework.math.Point2f
import fr.utbm.info.ia51.framework.math.Vector2f
import fr.utbm.info.ia51.framework.time.TimeManager
import fr.utbm.info.ia51.framework.util.Resources
import java.awt.Color
import java.awt.Graphics2D
import java.awt.AlphaComposite // 为了半透明图像
import java.awt.GridLayout
import java.awt.Shape
import java.awt.geom.Line2D
import java.io.Serializable
import java.text.DecimalFormat
import javax.swing.Icon
import javax.swing.ImageIcon
import javax.swing.JCheckBox
import javax.swing.JComponent
import javax.swing.JPanel
import javax.swing.JSlider

class Gui extends AbstractFrameworkGUI {

	static val DIRECTION_RADIUS = 30f  // ICON的大小
	
	static var CHURCH_ICON : Icon
	static var CHURCH_ICON_WIDTH : int
	static var CHURCH_ICON_HEIGHT : int 
	
	static var VISITOR_ICON : Icon
	//static var CARROT_ICON : Icon
	static var ICON_WIDTH : int
	static var ICON_HEIGHT : int

	static var SHOP_ICON : Icon
	static var SHOP_ICON_WIDTH : int
	static var SHOP_ICON_HEIGHT : int // 用于计算画的时候的起始点
	
	static var WALL_ICON : Icon
	static var WALL_ICON_WIDTH : int
	static var WALL_ICON_HEIGHT : int

	static var EXIT_ICON : Icon
	static var EXIT_ICON_WIDTH : int
	static var EXIT_ICON_HEIGHT : int

	static var ENTRANCE_ICON : Icon
	static var ENTRANCE_ICON_WIDTH : int
	static var ENTRANCE_ICON_HEIGHT : int

	static var BOMB_ICON : Icon
	static var BOMB_ICON_WIDTH : int
	static var BOMB_ICON_HEIGHT : int
	
	static var EXPLODED_PLACE_ICON : Icon
	static var EXPLODED_PLACE_ICON_WIDTH : int
	static var EXPLODED_PLACE_ICON_HEIGHT : int  

	static val FAKE = {
		var url = Resources.getResource(typeof(Gui), "visitor.png") // $NON-NLS-1$
		assert url !== null
		VISITOR_ICON = new ImageIcon(url)
		
		//		url = Resources::getResource(typeof(GUI), "carrot.png") // $NON-NLS-1$
//		assert url !== null
//		CARROT_ICON = new ImageIcon(url)
		ICON_WIDTH = VISITOR_ICON.iconWidth
		ICON_HEIGHT = VISITOR_ICON.iconHeight

		var urlShop = Resources.getResource(typeof(Gui), "shop.png") // 位置在resources
		assert urlShop !== null
		SHOP_ICON = new ImageIcon(urlShop)
		SHOP_ICON_WIDTH = SHOP_ICON.iconWidth
		SHOP_ICON_HEIGHT = SHOP_ICON.iconHeight
		
		url = Resources.getResource(typeof(Gui), "church.png")
		assert url !== null
		CHURCH_ICON=new ImageIcon(url)
		CHURCH_ICON_WIDTH = CHURCH_ICON.iconWidth
		CHURCH_ICON_HEIGHT = CHURCH_ICON.iconHeight

		url = Resources.getResource(typeof(Gui), "wall.png")
		assert url !== null
		WALL_ICON = new ImageIcon(url)
		WALL_ICON_WIDTH = WALL_ICON.iconWidth
		WALL_ICON_HEIGHT = WALL_ICON.iconHeight
		

		url = Resources.getResource(typeof(Gui), "entrance.png")
		assert url !== null
		ENTRANCE_ICON = new ImageIcon(url)
		ENTRANCE_ICON_WIDTH = ENTRANCE_ICON.iconWidth
		ENTRANCE_ICON_HEIGHT = ENTRANCE_ICON.iconHeight

		url = Resources.getResource(typeof(Gui), "exit.png")
		assert url !== null
		EXIT_ICON = new ImageIcon(url)
		EXIT_ICON_WIDTH = EXIT_ICON.iconWidth
		EXIT_ICON_HEIGHT = EXIT_ICON.iconHeight

		url = Resources.getResource(typeof(Gui), "bomb.png")
		assert url !== null
		BOMB_ICON = new ImageIcon(url)
		BOMB_ICON_WIDTH = BOMB_ICON.iconWidth
		BOMB_ICON_HEIGHT = BOMB_ICON.iconHeight

		url = Resources.getResource(typeof(Gui), "exploded.png")
		assert url !== null  
		EXPLODED_PLACE_ICON = new ImageIcon(url)
		EXPLODED_PLACE_ICON_WIDTH = BOMB_ICON.iconWidth
		EXPLODED_PLACE_ICON_HEIGHT = BOMB_ICON.iconHeight
		
	}

	// create a BottomPanel for simulate control
	new(worldWidth : float,worldHeight: float,timeManager:TimeManager){
		super(
			"Crowd Simulation",
			worldWidth,
			worldHeight,
			Resources::getResource(typeof(Gui),"start.png"), //这个png显示在左上角
			timeManager
		)	
	}

	var showIcons : JCheckBox
	var showPositions : JCheckBox // 这两个是下方的额外选项

	override createBottomPanel(speedSlider : JSlider, closeButton : JComponent, messageBox : JComponent) : JComponent {
		var bottomPanel = new JPanel
		bottomPanel.layout = new GridLayout(5, 1)
		this.showIcons = new JCheckBox("Draw the icons of the visitors.")
		this.showIcons.addActionListener[repaint]
		this.showIcons.selected = true
		this.showPositions = new JCheckBox("Draw the positions.")
		this.showPositions.addActionListener[repaint]
		bottomPanel.add(speedSlider)
		bottomPanel.add(this.showIcons)
		bottomPanel.add(this.showPositions)
		bottomPanel.add(closeButton)
		bottomPanel.add(messageBox)
		return bottomPanel
	}
	
	protected def isMouseCursorHidden : boolean {
		false
	}

	//用png代替小圆圈
	protected def paintIcon(g2d : Graphics2D, icon : Icon, position : Point2f, orientation : Vector2f) {
		if (orientation !== null) {
			g2d.draw(new Line2D.Float(position.x, position.y, position.x + orientation.x * DIRECTION_RADIUS * 1.5f,
				position.y + orientation.y * DIRECTION_RADIUS * 1.5f));
		}
		icon.paintIcon(this, g2d, position.x as int - ICON_WIDTH / 2, position.y as int - ICON_HEIGHT / 2);
	}

	// 用来画人的图像和方向
	override paintAgentBody(g2d : Graphics2D, positionOnScreen : Point2f, orientationOnScreen : Vector2f, shape : Shape,
		type : Serializable, name : String, positionInMAS : Point2f, frustum : Shape) {
		var bounds = shape.bounds
		g2d.color = Color::BLUE
		if (this.showIcons.selected) {
			paintIcon(g2d, VISITOR_ICON, positionOnScreen, orientationOnScreen)
			
		} else {
			orientationOnScreen.scale(DIRECTION_RADIUS)
			g2d.draw(
				new Line2D.Float(positionOnScreen.x, positionOnScreen.y, positionOnScreen.x + orientationOnScreen.x,
					positionOnScreen.y + orientationOnScreen.y))
			
			//fill color
			g2d.fill(shape)
		}
		if (this.showPositions.selected) {
			var oldFont = g2d.font
			var f = oldFont.deriveFont(6)
			g2d.color = g2d.background.darker
			g2d.font = f
			var fmt = new DecimalFormat("#.#")
			g2d.drawString(
					"(" + fmt.format(positionInMAS.x) + ";" + fmt.format(positionInMAS.y) + ")",
				bounds.maxX as float + 2, bounds.maxY as float + 2)
			g2d.font = oldFont
		}
	}


// TODO: 一下所有的都重复了，可以删掉写一个总的，使用 switch 或者是  if 来 判断画图
	override paintShopBody(g2d : Graphics2D, positionOnScreen : Point2f, orientationOnScreen : Vector2f, shape : Shape,
		type : Serializable, name : String, positionInMAS : Point2f, frustum : Shape) {
		var bounds = shape.bounds
		g2d.color = Color::BLUE
		if (this.showIcons.selected) {
			paintObstacleIcon(g2d, SHOP_ICON, positionOnScreen, orientationOnScreen)

		} else {
			orientationOnScreen.scale(DIRECTION_RADIUS)
			g2d.draw(
				new Line2D.Float(positionOnScreen.x, positionOnScreen.y, positionOnScreen.x + orientationOnScreen.x,
					positionOnScreen.y + orientationOnScreen.y))
			g2d.fill(shape)
		}
		if (this.showPositions.selected) {
			var oldFont = g2d.font
			var f = oldFont.deriveFont(6)
			g2d.color = g2d.background.darker
			g2d.font = f
			var fmt = new DecimalFormat("#.#")
			g2d.drawString("(" + fmt.format(positionInMAS.x) + ";" + fmt.format(positionInMAS.y) + ")",
				bounds.maxX as float + 2, bounds.maxY as float + 2)
			g2d.font = oldFont
		}
	}

	override paintChurchBody(g2d : Graphics2D, positionOnScreen : Point2f, orientationOnScreen : Vector2f, shape : Shape,
		type : Serializable, name : String, positionInMAS : Point2f, frustum : Shape) {
		var bounds = shape.bounds
		g2d.color = Color::BLUE
		if (this.showIcons.selected) {
			paintObstacleIcon(g2d, CHURCH_ICON, positionOnScreen, orientationOnScreen)

		} else {
			orientationOnScreen.scale(DIRECTION_RADIUS)
			/*g2d.draw(
				new Line2D.Float(positionOnScreen.x, positionOnScreen.y, positionOnScreen.x + orientationOnScreen.x,
					positionOnScreen.y + orientationOnScreen.y))*/
			g2d.fill(shape)
		}
		if (this.showPositions.selected) {
			var oldFont = g2d.font
			var f = oldFont.deriveFont(6)
			g2d.color = g2d.background.darker
			g2d.font = f
			var fmt = new DecimalFormat("#.#")
			g2d.drawString("(" + fmt.format(positionInMAS.x) + ";" + fmt.format(positionInMAS.y) + ")",
				bounds.maxX as float + 2, bounds.maxY as float + 2)
			g2d.font = oldFont
		}
	}

	override paintWallBody(g2d : Graphics2D, positionOnScreen : Point2f, orientationOnScreen : Vector2f,
		shape : Shape, type : Serializable, name : String, positionInMAS : Point2f, frustum : Shape) {
		var bounds = shape.bounds
		g2d.color = Color::BLUE
		if (this.showIcons.selected) {
			paintObstacleIcon(g2d, WALL_ICON, positionOnScreen, orientationOnScreen)

		} else {
			orientationOnScreen.scale(DIRECTION_RADIUS)

			/* g2d.draw(
			 * new Line2D.Float(positionOnScreen.x, positionOnScreen.y, positionOnScreen.x + orientationOnScreen.x,
			 * positionOnScreen.y + orientationOnScreen.y))
			 */
			g2d.fill(shape)
		}
		if (this.showPositions.selected) {
			var oldFont = g2d.font
			var f = oldFont.deriveFont(6)
			g2d.color = g2d.background.darker
			g2d.font = f
			var fmt = new DecimalFormat("#.#")
			g2d.drawString("(" + fmt.format(positionInMAS.x) + ";" + fmt.format(positionInMAS.y) + ")",
				bounds.maxX as float + 2, bounds.maxY as float + 2)
			g2d.font = oldFont
		}
	}

	override paintExitBody(g2d : Graphics2D, positionOnScreen : Point2f, orientationOnScreen : Vector2f, shape : Shape,
		type : Serializable, name : String, positionInMAS : Point2f, frustum : Shape) {
		var bounds = shape.bounds
		g2d.color = Color::BLUE
		if (this.showIcons.selected) {
			paintObstacleIcon(g2d, EXIT_ICON, positionOnScreen, orientationOnScreen)

		} else {
			orientationOnScreen.scale(DIRECTION_RADIUS)

			/* g2d.draw(
			 * new Line2D.Float(positionOnScreen.x, positionOnScreen.y, positionOnScreen.x + orientationOnScreen.x,
			 * positionOnScreen.y + orientationOnScreen.y))
			 */
			g2d.fill(shape)
		}
		if (this.showPositions.selected) {
			var oldFont = g2d.font
			var f = oldFont.deriveFont(6)
			g2d.color = g2d.background.darker
			g2d.font = f
			var fmt = new DecimalFormat("#.#")
			g2d.drawString("(" + fmt.format(positionInMAS.x) + ";" + fmt.format(positionInMAS.y) + ")",
				bounds.maxX as float + 2, bounds.maxY as float + 2)
			g2d.font = oldFont
		}
	}

	override paintEntranceBody(g2d : Graphics2D, positionOnScreen : Point2f, orientationOnScreen : Vector2f, shape : Shape,
		type : Serializable, name : String, positionInMAS : Point2f, frustum : Shape) {
		var bounds = shape.bounds
		g2d.color = Color::BLUE
		if (this.showIcons.selected) {
			paintObstacleIcon(g2d, ENTRANCE_ICON, positionOnScreen, orientationOnScreen)

		} else {
			orientationOnScreen.scale(DIRECTION_RADIUS)
			g2d.fill(shape)
		}
		if (this.showPositions.selected) {
			var oldFont = g2d.font
			var f = oldFont.deriveFont(6)
			g2d.color = g2d.background.darker
			g2d.font = f
			var fmt = new DecimalFormat("#.#")
			g2d.drawString("(" + fmt.format(positionInMAS.x) + ";" + fmt.format(positionInMAS.y) + ")",
				bounds.maxX as float + 2, bounds.maxY as float + 2)
			g2d.font = oldFont
		}
	}

	override paintExplodedPlace(g2d : Graphics2D, positionOnScreen : Point2f, orientationOnScreen : Vector2f,
		shape : Shape, type : Serializable, name : String, positionInMAS : Point2f, frustum : Shape, danger : float) {
			
		var bounds = shape.bounds
		//
		g2d.color = Color::RED
		var alpha = 0.1f;
		var alcom = AlphaComposite.getInstance(AlphaComposite.SRC_OVER, alpha);
		g2d.setComposite(alcom);
		// 画出淡红色的危险区域
		g2d.fillOval(
			(positionOnScreen.x - danger).intValue,
			(positionOnScreen.y - danger).intValue,
			(danger * 2).intValue,
			(danger * 2).intValue
		)
		//画出明显的boom图标
		alpha = 1.0f;
		alcom = AlphaComposite.getInstance(AlphaComposite.SRC_OVER, alpha);
		g2d.setComposite(alcom);
		if (this.showIcons.selected) {
			paintObstacleIcon(g2d, EXPLODED_PLACE_ICON, positionOnScreen, orientationOnScreen)			
		} else {
			orientationOnScreen.scale(DIRECTION_RADIUS)
			g2d.fill(shape)
		}
		
		if (this.showPositions.selected) {
			var oldFont = g2d.font
			var f = oldFont.deriveFont(6)
			g2d.color = g2d.background.darker
			g2d.font = f
			var fmt = new DecimalFormat("#.#")
			g2d.drawString("(" + fmt.format(positionInMAS.x) + ";" + fmt.format(positionInMAS.y) + ")",
				bounds.maxX as float + 2, bounds.maxY as float + 2)
			g2d.font = oldFont
		}
	}

	//显示鼠标的样子
	override paintSituatedObject(g2d : Graphics2D, positionOnScreen : Point2f, orientationOnScreen : Vector2f,
		shape : Shape, type : Serializable, name : String, positionInMAS : Point2f) {
		var bounds = shape.bounds
		g2d.color = Color.GREEN

		var icon : Icon
		if ("TARGET" == type) {
			icon = BOMB_ICON
		}

		if (this.showIcons.selected && icon !== null) {
			paintIcon(g2d, icon, positionOnScreen, orientationOnScreen)
		} else {
			g2d.fill(shape)
			if (orientationOnScreen !== null) {
				g2d.color = g2d.background
				var v = orientationOnScreen * Math.max(bounds.width, bounds.height) as float
				g2d.draw(new Line2D.Float(positionOnScreen.x, positionOnScreen.y, positionOnScreen.x + v.x,
					positionOnScreen.y + v.y))
			}
		}
		if (this.showPositions.selected) {
			var oldFont = g2d.font
			var f = oldFont.deriveFont(6)
			g2d.color = g2d.background.darker
			g2d.font = f
			var fmt = new DecimalFormat("#.#")
			g2d.drawString(
					"(" + fmt.format(positionInMAS.x) + ";" + fmt.format(positionInMAS.y) + ")",
					bounds.maxX as float + 2, bounds.maxY as float + 2)
			g2d.font = oldFont
		}
	}

	protected def paintObstacleIcon(g2d : Graphics2D, icon : Icon, position : Point2f, orientation : Vector2f) {
		/*if (orientation !== null) {
			g2d.draw(new Line2D.Float(position.x, position.y, position.x + orientation.x * DIRECTION_RADIUS * 1.5f,
				position.y + orientation.y * DIRECTION_RADIUS * 1.5f));
		}*/
		icon.paintIcon(this, g2d, position.x as int - SHOP_ICON_WIDTH / 2, position.y as int - SHOP_ICON_HEIGHT / 2);
	}
	
	
// 用来画  商店  的图像和方向
	
	
	
}
