/* 
 * $Id$
 * 
 * Copyright (c) 2011-17 Stephane GALLAND <stephane.galland@utbm.fr>.
 * 
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 * This program is free software; you can redistribute it and/or modify
 */

import fr.utbm.info.ia51.framework.FrameworkLauncher
import fr.utbm.info.ia51.framework.gui.BehaviorTypeSelector
//import fr.utbm.info.ia51.labworks.motionbeh.^agent.Rabbit
//import fr.utbm.info.ia51.labworks.motionbeh.environment.WorldModel
// import fr.utbm.info.ia51.labworks.motionbeh.ui.GUI
import crowdAgent.Visitor
import crowd.ui.Gui
import java.util.List
import environment.SquareMap
import io.sarl.core.Logging

/** 
 * @author 
 * @version $Name$ $Revision$ $Date$
 */
agent MotionBehaviorBoot extends FrameworkLauncher {

	uses Logging;
	
	val WORLD_SIZE_X = 700f
	val WORLD_SIZE_Y = 700f
	val NUMBER_VISITOR = 2

	override initializeSimulation(parameters : List<Object>) : boolean {

		info("Crowd simulation was started.");
		var type = BehaviorTypeSelector.open
		if (type !== null) {
			var environment = new SquareMap(WORLD_SIZE_X, WORLD_SIZE_Y)
//
////			for (i : 1 .. NUMBER_VISITOR) {
////				environment.createVisitor
////			}
//
			var gui = new Gui(WORLD_SIZE_X, WORLD_SIZE_Y, environment.timeManager)
//
			return initializeSimulation(environment, type, gui, parameters)[typeof(Visitor)] 	// typeof(Visitor)
		} else {
			return false
		}
	}

}
