import environment.*
import crowd.ui.*
import io.sarl.core.Logging
import io.sarl.core.Initialize

import fr.utbm.info.ia51.framework.FrameworkLauncher
// import fr.utbm.info.ia51.framework.gui.BehaviorTypeSelector
import fr.utbm.info.ia51.framework.environment.DynamicType
import ^agent.Visitor
import environment.SquareMap
import crowd.ui.Gui
import java.util.List
import fr.utbm.info.ia51.framework.gui.BehaviorTypeSelector

agent SimulationLauncher extends FrameworkLauncher {

	
	val WORLD_SIZE_X = 700f
	val WORLD_SIZE_Y = 700f
	val NUMBER_VISITOR = 3
	val NUMBER_SHOP : int = 5
 
	override initializeSimulation(parameters : List<Object>) : boolean {
	var type = BehaviorTypeSelector.open
	if (type !== null) {
		var environment = new SquareMap(WORLD_SIZE_X, WORLD_SIZE_Y)

		//var type = DynamicType.KINEMATIC ;// 这里是DynamicType 类型， 是agent的行为类型
		//TODO: 完成visitor 和 environment
		for (i : 1 .. NUMBER_VISITOR) {
			environment.createVisitor
		}
		for (i : 1 .. NUMBER_SHOP) {
			environment.createShop
		}
		
		var gui = new Gui(WORLD_SIZE_X, WORLD_SIZE_Y, environment.timeManager)
		
		return initializeSimulation(environment, type, gui, parameters)[typeof(Visitor)]
		}
}

}